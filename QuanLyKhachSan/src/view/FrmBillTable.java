/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.BillController;
import controller.EmployeeController;
import controller.RoomController;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import model.BillModel;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.EmployeeModel;
import model.RoomModel;

/**
 *
 * @author Admin
 */
public class FrmBillTable extends javax.swing.JFrame {

    /**
     * Creates new form FrmBillTable
     */
    RoomController roomController = new RoomController();
    BillController billController = new BillController();
    EmployeeController employeeController = new EmployeeController();

    public FrmBillTable() {
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBill = new javax.swing.JTable();
        pnl = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtCCCD = new javax.swing.JTextField();
        cboPhong = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnNow = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        txtPhi = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtTimeCheckOut = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtTimeCheckIn = new javax.swing.JTextField();
        btnCheckOut = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        cboEmloyee = new javax.swing.JComboBox<>();
        txtNameEmloyee = new javax.swing.JTextField();
        txth = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnTinhPhí = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnnSortByName = new javax.swing.JButton();
        btnSortByDate = new javax.swing.JButton();
        btnSortByPay = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jButton5.setText("jButton5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tableBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hoá đơn", "Tên khách hàng", "Căn cước", "Nhân viên lập", "Số phòng", "Giờ đăt", "Giờ trả", "Phí", "Tình trạng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableBill.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBillMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBill);
        if (tableBill.getColumnModel().getColumnCount() > 0) {
            tableBill.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableBill.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableBill.getColumnModel().getColumn(2).setPreferredWidth(50);
            tableBill.getColumnModel().getColumn(4).setPreferredWidth(10);
        }

        pnl.setBackground(new java.awt.Color(255, 255, 204));

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        btnInsert.setText("Đặt phòng");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        jPanel2.add(btnInsert);

        btnDelete.setText("Xoá");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete);

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel2.add(btnEdit);

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel2.add(btnSearch);

        btnRefresh.setText("Tải lại");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jPanel2.add(btnRefresh);

        btnClose.setText("Thoát");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel2.add(btnClose);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Người lập hoá đơn");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tên người đăt");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Căn cước");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Số phòng");

        jLabel5.setText("Thời gian đặt phòng");

        jLabel6.setText("Thời gian trả phòng");

        btnNow.setText("Giờ đặt hiện tại");
        btnNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNowActionPerformed(evt);
            }
        });

        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        jLabel12.setText("Phí");

        jLabel13.setText("Số hoá đơn");

        btnCheckOut.setText("Giờ thanh toán (hiện tại)");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        cboEmloyee.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboEmloyeeItemStateChanged(evt);
            }
        });

        txtNameEmloyee.setEnabled(false);

        jLabel7.setText("Số giờ");

        btnTinhPhí.setText("Tính phí");
        btnTinhPhí.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhPhíActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLayout = new javax.swing.GroupLayout(pnl);
        pnl.setLayout(pnlLayout);
        pnlLayout.setHorizontalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(54, 54, 54))
            .addGroup(pnlLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCCCD, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboEmloyee, javax.swing.GroupLayout.Alignment.LEADING, 0, 251, Short.MAX_VALUE)
                    .addComponent(txtNameEmloyee, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtID, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboPhong, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlLayout.createSequentialGroup()
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLayout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(filler3, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLayout.createSequentialGroup()
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txth, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTimeCheckOut)
                                    .addComponent(txtTimeCheckIn)
                                    .addComponent(txtPhi, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(4, 4, 4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(btnCheckOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(btnTinhPhí, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnThanhToan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(56, 56, 56))))
        );
        pnlLayout.setVerticalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(8, 8, 8)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNameEmloyee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(cboEmloyee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName)
                            .addComponent(jLabel2))
                        .addGap(16, 16, 16)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12)
                            .addComponent(txtPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThanhToan))
                        .addGap(18, 18, 18)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtTimeCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLayout.createSequentialGroup()
                                .addComponent(btnNow)
                                .addGap(18, 18, 18)
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTimeCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCheckOut)
                                    .addComponent(jLabel6))))
                        .addGap(18, 18, 18)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLayout.createSequentialGroup()
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(22, 22, 22)
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnTinhPhí))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(53, 53, 53))
        );

        jPanel3.setBackground(new java.awt.Color(0, 255, 102));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        btnnSortByName.setText("Sắp xếp theo tên");
        btnnSortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnSortByNameActionPerformed(evt);
            }
        });
        jPanel3.add(btnnSortByName);

        btnSortByDate.setText("Sắp xếp theo ngày đặt gần đây");
        btnSortByDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByDateActionPerformed(evt);
            }
        });
        jPanel3.add(btnSortByDate);

        btnSortByPay.setText("Sắp xếp theo thanh toán cao nhất");
        btnSortByPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByPayActionPerformed(evt);
            }
        });
        jPanel3.add(btnSortByPay);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        this.setVisible(false);
        new FrmHome().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void tableBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBillMouseClicked
        // TODO add your handling code here:
        int indext = tableBill.getSelectedRow();
        BillModel bm = billController.getBill(indext);

        txtID.setText(bm.getId());
        txtName.setText(bm.getNameClient());
        txtCCCD.setText(bm.getIdClient());
        String idEmloy = billController.getBill(indext).getIdEmployee();
        cboEmloyee.setSelectedItem(idEmloy);
        String nameRoom = roomController.getRoomByID(bm.getIdRoom()).getNameRoom();
        cboPhong.setSelectedItem(nameRoom);
        txtTimeCheckIn.setText(bm.getTimeCheckIn());
        txtTimeCheckOut.setText(bm.getTimeCheckOut());
        txtPhi.setText(String.valueOf(bm.getPay()));
    }//GEN-LAST:event_tableBillMouseClicked

    private void btnNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNowActionPerformed
        // TODO add your handling code here:
        LocalDateTime d = LocalDateTime.now();
        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        txtTimeCheckIn.setText(dateTimeFormatter.format(d));
    }//GEN-LAST:event_btnNowActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.setVisible(false);
        new FrmHome().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        txtCCCD.setText("");
        txtID.setText("");
        txtName.setText("");
        txtPhi.setText("");
        txtTimeCheckIn.setText("");
        txtTimeCheckOut.setText("");
        loadTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:

        if (!"".equals(txtID.getText())) {
            String id = txtID.getText();
            String name = txtName.getText();
            String identi = txtCCCD.getText();
            String timeCheckIn = txtTimeCheckIn.getText();
            String idEmloyee = cboEmloyee.getSelectedItem().toString();
            int roomIndex = cboPhong.getSelectedIndex();
            String idRoom = roomController.getRoomByIndex(roomIndex).getIdRoom();
            String timeCheckOut = txtTimeCheckOut.getText();
            double pay = Double.parseDouble(txtPhi.getText());
            BillModel billModel = new BillModel(id, identi, name, idEmloyee, idRoom, timeCheckIn, timeCheckOut, pay);
            if (billController.roomOrderEmty(billModel) == true) {
                if ((JOptionPane.showConfirmDialog(this, "Bạn có muốn cập nhật lại thông tin đơn hàng?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0)) {
                    if (billController.updateBill(billModel) == true) {
                        JOptionPane.showConfirmDialog(this, "Đơn đặt hàng đã được cập nhật!", "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
                        btnRefreshActionPerformed(evt);
                    }
                    else{
                           JOptionPane.showConfirmDialog(this, "Kiểm tra lại thông tin!", "", JOptionPane.OK_OPTION, JOptionPane.WARNING_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showConfirmDialog(this, "Phòng đã được đặt", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showConfirmDialog(this, "Vui lòng nhập thông tin", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if ("".equals(txtID.getText())) {
            JOptionPane.showConfirmDialog(this, "Vui lòng nhập mã đơn hàng muốn xoá", "", JOptionPane.OK_OPTION, JOptionPane.WARNING_MESSAGE);
        } else if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xoá không?", "Xoá", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
            if (billController.deleteBill(txtID.getText()) == true) {
                JOptionPane.showConfirmDialog(this, "Đơn đặt hàng đã được xoá!", "Đã xoá", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
                loadTable();
            } else {
                JOptionPane.showConfirmDialog(this, "Không thể xoá!", "", JOptionPane.OK_OPTION, JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:

        if (!"".equals(txtName.getText()) && !"".equals(txtCCCD.getText()) && !"".equals(txtTimeCheckIn.getText())) {
            if (JOptionPane.showConfirmDialog(this, "Bạn có muốn tạo đặt phòng mới?", "Đặt phòng", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                int roomIndex = cboPhong.getSelectedIndex();
                String idRoom = String.valueOf(roomController.getRoomByIndex(roomIndex).getIdRoom());
                if (billController.roomEmty(idRoom) == true) {
                    LocalDateTime dateTime = LocalDateTime.now();
                    String id = "DH" + String.valueOf(dateTime.getYear()) + String.valueOf(dateTime.getDayOfYear()) + String.valueOf(dateTime.getHour()) + String.valueOf(dateTime.getMinute()) + String.valueOf(dateTime.getSecond());
                    String name = txtName.getText();
                    String identi = txtCCCD.getText();
                    String timeCheckIn = txtTimeCheckIn.getText();
                    String idEmloyee = cboEmloyee.getSelectedItem().toString();
                    BillModel billModel = new BillModel(id, identi, name, idEmloyee, idRoom, timeCheckIn);
                    if (billController.insertBill(billModel) == true) {
                        JOptionPane.showConfirmDialog(this, "Phòng đã đươc đặt!", "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
                        btnRefreshActionPerformed(evt);

                    } else {
                        JOptionPane.showConfirmDialog(this, "Không thể đặt phòng!", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showConfirmDialog(this, "Phòng đã có người đặt", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            JOptionPane.showConfirmDialog(this, "Vui lòng nhập thông tin", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void cboEmloyeeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboEmloyeeItemStateChanged
        // TODO add your handling code here:
        int i = cboEmloyee.getSelectedIndex();
        if (i >= 0) {
            txtNameEmloyee.setText(employeeController.getEmloyeeIndex(i).getName());

        }
    }//GEN-LAST:event_cboEmloyeeItemStateChanged

    private void btnnSortByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnSortByNameActionPerformed
        // TODO add your handling code here:

        DefaultTableModel Model = (DefaultTableModel) tableBill.getModel();
        Model.setRowCount(0);
        for (BillModel billModel : billController.sortByName()) {
            String nameRoom = roomController.getRoomByID(billModel.getIdRoom()).getNameRoom();
            String nameEmloyee = employeeController.getEmloyeeByID(billModel.getIdEmployee()).getName();
            String start = "Chưa thanh toán";
            if (billModel.getStart() == 1) {
                start = "Đã thanh toán";
            }
            Object[] objects = {billModel.getId(), billModel.getNameClient(), billModel.getIdClient(), nameEmloyee, nameRoom, billModel.getTimeCheckIn(), billModel.getTimeCheckOut(), billModel.getPay(), start};
            Model.addRow(objects);
        }
    }//GEN-LAST:event_btnnSortByNameActionPerformed

    private void btnSortByDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByDateActionPerformed
        // TODO add your handling code here:

        DefaultTableModel Model = (DefaultTableModel) tableBill.getModel();
        Model.setRowCount(0);
        for (BillModel billModel : billController.sortByDate()) {
            String nameRoom = roomController.getRoomByID(billModel.getIdRoom()).getNameRoom();
            String nameEmloyee = employeeController.getEmloyeeByID(billModel.getIdEmployee()).getName();
            String start = "Chưa thanh toán";
            if (billModel.getStart() == 1) {
                start = "Đã thanh toán";
            }
            Object[] objects = {billModel.getId(), billModel.getNameClient(), billModel.getIdClient(), nameEmloyee, nameRoom, billModel.getTimeCheckIn(), billModel.getTimeCheckOut(), billModel.getPay(), start};
            Model.addRow(objects);
        }
    }//GEN-LAST:event_btnSortByDateActionPerformed

    private void btnSortByPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByPayActionPerformed
        // TODO add your handling code here:

        DefaultTableModel Model = (DefaultTableModel) tableBill.getModel();
        Model.setRowCount(0);
        for (BillModel billModel : billController.sortByPay()) {
            String nameRoom = roomController.getRoomByID(billModel.getIdRoom()).getNameRoom();
            String nameEmloyee = employeeController.getEmloyeeByID(billModel.getIdEmployee()).getName();
            String start = "Chưa thanh toán";
            if (billModel.getStart() == 1) {
                start = "Đã thanh toán";
            }
            Object[] objects = {billModel.getId(), billModel.getNameClient(), billModel.getIdClient(), nameEmloyee, nameRoom, billModel.getTimeCheckIn(), billModel.getTimeCheckOut(), billModel.getPay(), start};
            Model.addRow(objects);
        }
    }//GEN-LAST:event_btnSortByPayActionPerformed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        LocalDateTime d = LocalDateTime.now();
        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        txtTimeCheckOut.setText(dateTimeFormatter.format(d));
        btnTinhPhíActionPerformed(evt);
    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        if (!"".equals(txtID.getText())) {
            String id = txtID.getText();
            String name = txtName.getText();
            String identi = txtCCCD.getText();
            String timeCheckIn = txtTimeCheckIn.getText();
            String idEmloyee = cboEmloyee.getSelectedItem().toString();
            int roomIndex = cboPhong.getSelectedIndex();
            String idRoom = roomController.getRoomByIndex(roomIndex).getIdRoom();
            String timeCheckOut = txtTimeCheckOut.getText();
            double hour = Double.parseDouble(txth.getText());
            double price = roomController.getRoomByID(idRoom).getPrice();
            double pay = hour * price;
            int start = billController.getBillByID(id).getStart();
            if (start == 0) {
                start = 1;
                BillModel billModel = new BillModel(id, identi, name, idEmloyee, idRoom, timeCheckIn, timeCheckOut, pay, start);
                if ((JOptionPane.showConfirmDialog(this, "Bạn có muốn thanh toán phòng?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0)) {
                    billController.updateBill(billModel);
                    btnRefreshActionPerformed(evt);
                }
            } else {
                JOptionPane.showConfirmDialog(this, "Hoá đơn đã thanh toán", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showConfirmDialog(this, "Vui lòng nhập thông tin", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnTinhPhíActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhPhíActionPerformed
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date timeIn;
        Date timeOut;
        try {
            timeIn = dateFormat.parse(txtTimeCheckIn.getText());
            timeOut = dateFormat.parse(txtTimeCheckOut.getText());
            long getDiff = timeOut.getTime() - timeIn.getTime();
            long getDaysDiff = getDiff / (60 * 60 * 1000);
            txth.setText(String.valueOf(getDaysDiff));
            int roomIndex = cboPhong.getSelectedIndex();
            String idRoom = roomController.getRoomByIndex(roomIndex).getIdRoom();
            double price = roomController.getRoomByID(idRoom).getPrice();
            double total = price * (double) getDaysDiff;
            txtPhi.setText(String.valueOf(total));
        } catch (ParseException ex) {

        }
    }//GEN-LAST:event_btnTinhPhíActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if (!"".equals(txtID.getText())) {
            String ID = txtID.getText();
            DefaultTableModel Model = (DefaultTableModel) tableBill.getModel();
            Model.setRowCount(0);
            for (BillModel billModel : billController.searchByID(ID)) {
                String nameRoom = roomController.getRoomByID(billModel.getIdRoom()).getNameRoom();
                String nameEmloyee = employeeController.getEmloyeeByID(billModel.getIdEmployee()).getName();
                String start = "Chưa thanh toán";
                if (billModel.getStart() == 1) {
                    start = "Đã thanh toán";
                }
                Object[] objects = {billModel.getId(), billModel.getNameClient(), billModel.getIdClient(), nameEmloyee, nameRoom, billModel.getTimeCheckIn(), billModel.getTimeCheckOut(), billModel.getPay(), start};
                Model.addRow(objects);
            }
        } else {
            JOptionPane.showConfirmDialog(this, "Vui lòng nhập đơn hàng cần tìm!", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void loadTable() {

        DefaultTableModel Model = (DefaultTableModel) tableBill.getModel();
        Model.setRowCount(0);
        roomController.getRoomTable();
        cboEmloyee.removeAllItems();
        cboPhong.removeAllItems();
        roomController.getRoomTable();
        employeeController.getEmployeeTable();
        for (BillModel billModel : billController.GetTableBill()) {
            String nameRoom;
            String nameEmloyee;
            try {
                nameRoom = roomController.getRoomByID(billModel.getIdRoom()).getNameRoom();

            } catch (Exception e) {
                nameRoom = billModel.getIdRoom();
            }
            try {
                nameEmloyee = employeeController.getEmloyeeByID(billModel.getIdEmployee()).getName();

            } catch (Exception e) {
                nameEmloyee = billModel.getIdEmployee();
            }
            String start = "Chưa thanh toán";
            if (billModel.getStart() == 1) {
                start = "Đã thanh toán";
            }
            Object[] objects = {billModel.getId(), billModel.getNameClient(), billModel.getIdClient(), nameEmloyee, nameRoom, billModel.getTimeCheckIn(), billModel.getTimeCheckOut(), billModel.getPay(), start};
            Model.addRow(objects);
        }
        for (RoomModel roomModel : roomController.getRoomTable()) {
            cboPhong.addItem(roomModel.getNameRoom());
        }
        for (EmployeeModel emloyeeModel : employeeController.getListEmloyee()) {
            cboEmloyee.addItem(emloyeeModel.getId());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnNow;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSortByDate;
    private javax.swing.JButton btnSortByPay;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnTinhPhí;
    private javax.swing.JButton btnnSortByName;
    private javax.swing.JComboBox<String> cboEmloyee;
    private javax.swing.JComboBox<String> cboPhong;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JButton jButton5;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnl;
    private javax.swing.JTable tableBill;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNameEmloyee;
    private javax.swing.JTextField txtPhi;
    private javax.swing.JTextField txtTimeCheckIn;
    private javax.swing.JTextField txtTimeCheckOut;
    private javax.swing.JTextField txth;
    // End of variables declaration//GEN-END:variables
}
